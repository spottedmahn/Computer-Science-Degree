<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=FrontPage.Editor.Document>
<meta name=Generator content="Microsoft FrontPage 4.0">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="passign1_files/filelist.xml">
<title>COT 4932 -Spring 2004 Programming Assignment 1</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Oleg Kachirski</o:Author>
  <o:LastAuthor>Oleg Kachirski</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>151</o:TotalTime>
  <o:Created>2004-02-23T22:26:00Z</o:Created>
  <o:LastSaved>2004-02-23T22:26:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>691</o:Words>
  <o:Characters>3940</o:Characters>
  <o:Company>University of Central Florida</o:Company>
  <o:Lines>32</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>4622</o:CharactersWithSpaces>
  <o:Version>10.4219</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HideSpellingErrors/>
  <w:HideGrammaticalErrors/>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:"MS Mincho";
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:"Courier New CYR";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:513 0 0 0 4 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;
	mso-fareast-language:ZH-CN;}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Courier;
	mso-fareast-font-family:"MS Mincho";
	mso-bidi-font-family:"Courier New";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:49.5pt 1.0in .5in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1357659407;
	mso-list-type:hybrid;
	mso-list-template-ids:765503244 -1273995056 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:16.0pt;mso-bidi-font-size:12.0pt'>COT 4932 -Spring 2004<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:16.0pt;mso-bidi-font-size:12.0pt'>Programming Assignment 1</span></p>

<p class=MsoNormal align=center style='text-align:center'><span style="font-size: 16.0pt; mso-bidi-font-size: 12.0pt">Due
Monday, March 08, 2004 via e-mail</span><span
style='font-size:16.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</p>

<p class=MsoNormal><b><font color="#FF0000"><blink>NEW</blink>:</font> See notes on Java etc at
the bottom of this page.</b></p>

<p class=MsoNormal></o:p>&nbsp;</p>

<p class=MsoNormal>In this assignment, you will demonstrate the use of Java
cryptography classes, namely the Cipher class. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l0 level1 lfo1;
tab-stops:list .25in'><![if !supportLists]><span style='mso-fareast-font-family:
"Times New Roman"'><span style='mso-list:Ignore'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>An instance of a Cipher class implements a
requested transformation. Transformation is of the form “algorithm” or
“algorithm/mode/padding”. For example, “DES”, or &quot;DES/CBC/PKCS5Padding&quot;.
Find out more about different modes of DES algorithm and write a short
description of each. Examples include Electronic Code Book Mode (ECB), Cipher
Block Chaining Mode (CBC), etc.</p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in;mso-list:l0 level1 lfo1;tab-stops:.25in list 22.5pt'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]>Given
the following commented code, study it carefully. Write a driver program for
this class that asks the user for a key and input and output <span class=GramE>filenames,</span>
then encrypts or decrypts the file (depending whether user has selected
appropriate flag). The encoded secret key is in the form of 8 <span
class=GramE>byte-array</span>. You should enter the key as a string, <span
class=GramE>then</span> a conversion is required to represent it in proper form
for use with <span class=SpellE>DesEncrypter</span> class. Hint: First, create
new key specification using class <span class=SpellE><span style='color:blue'>KeySpec</span></span>
with your <span class=SpellE>passphrase</span>, salt and iteration count (use
ones from code below). Then, use <span class=SpellE><span style='color:blue'>SecretKeyFactory</span></span>
class to generate <span class=SpellE>SecretKey</span> with <i style='mso-bidi-font-style:
normal'><span style='color:blue'>PBEWithMD5AndDES</span></i> algorithm
(Password-Based Encryption). Pass this key to <span class=SpellE>DesEncrypter</span>
class.</p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph;
tab-stops:.25in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph;
tab-stops:.25in'><span style='mso-tab-count:1'>      </span>The syntax of the
command is as follows:</p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify;text-justify:
inter-ideograph'><span class=GramE><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Courier New"'>C:</span></span><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:"Courier New"'>\&gt; java <span
class=SpellE>desfile</span> &lt;<span class=SpellE>infile</span>&gt; &lt;<span
class=SpellE>outfile</span>&gt; <span class=SpellE>encrypt|decrypt</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify;text-justify:
inter-ideograph'><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>Enter key: &lt;pass phrase&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify;text-justify:
inter-ideograph'><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>. . .<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify;text-justify:
inter-ideograph'><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>Done<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><o:p>&nbsp;</o:p></p>

<div style='border:none;border-bottom:solid windowtext 1.0pt;mso-border-bottom-alt:
solid windowtext .75pt;padding:0in 0in 1.0pt 0in'>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph;
border:none;mso-border-bottom-alt:solid windowtext .75pt;padding:0in;
mso-padding-alt:0in 0in 1.0pt 0in'><span class=SpellE>Encryptor/decryptor</span>
class:</p>

</div>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
class=GramE><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New"'>import</span></span><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Courier New"'> <span class=SpellE>java.io</span>.*;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
class=GramE><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New"'>import</span></span><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Courier New"'> <span class=SpellE>javax.crypto</span>.*;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
class=GramE><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New"'>import</span></span><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Courier New"'> <span class=SpellE>java.security.spec</span>.*;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
class=GramE><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New"'>import</span></span><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Courier New"'> <span class=SpellE>javax.crypto.spec</span>.*;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-justify:inter-ideograph'><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span class=GramE>public</span> class <span
class=SpellE>DesEncrypter</span> {</pre><pre><o:p>&nbsp;</o:p></pre><pre><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// <span
class=GramE>Declare</span> encryption cipher<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Cipher <span
class=SpellE>ecipher</span>; </pre><pre><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// <span class=GramE>Declare</span> decryption cipher</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Cipher <span
class=SpellE>dcipher</span>;</pre><pre><span style='color:green'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>// <span class=GramE>Declare</span> PBE Parameter Specs (to include salt and count)</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span class=SpellE>PBEParameterSpec</span> <span
class=SpellE>pbeParamSpec</span>;<o:p></o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span
style='color:green'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>// Class constructor:<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>DesEncrypter</span></span><span class=GramE>(</span><span
class=SpellE>SecretKey</span> key) {</pre><pre><o:p>&nbsp;</o:p></pre><pre><o:p>&nbsp;</o:p></pre><pre><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp; </span><span
style='color:green'>// Salt for <span class=SpellE>PBEParameterSpec</span><o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
class=GramE>byte[</span>] salt = {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(<span class=GramE>byte)</span>0xc7, (byte)0x73, (byte)0x21, (byte)0x8c,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(<span class=GramE>byte)</span>0x7e, (byte)0xc8, (byte)0xee, (byte)0x99</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span>};</pre><pre><o:p>&nbsp;</o:p></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='color:green'>// Iteration count<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
class=SpellE><span class=GramE>int</span></span> count = 20;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// <span
class=GramE>Create</span> PBE parameter set<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span class=SpellE><span class=GramE>pbeParamSpec</span></span> = new <span
class=SpellE>PBEParameterSpec</span>(salt, count);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'> </span><span class=GramE>try</span> {</pre><pre><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// get instance of encrypt/decrypt cipher<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>ecipher</span></span> = <span class=SpellE>Cipher.getInstance</span>(&quot;PBEWithMD5AndDES&quot;);<o:p></o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>dcipher</span></span> = <span class=SpellE>Cipher.getInstance</span>(&quot;PBEWithMD5AndDES&quot;);<o:p></o:p></pre><pre><o:p>&nbsp;</o:p></pre><pre><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style='color:green'>// pass parameters to each cipher</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>ecipher.init</span></span><span class=GramE>(</span><span
class=SpellE>Cipher.ENCRYPT_MODE</span>, key, <span class=SpellE>pbeParamSpec</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>dcipher.init</span></span><span class=GramE>(</span><span
class=SpellE>Cipher.DECRYPT_MODE</span>, key, <span class=SpellE>pbeParamSpec</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// handle exceptions (errors)<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>java.security.InvalidAlgorithmParameterException</span> e) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>javax.crypto.NoSuchPaddingException</span> e) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>java.security.NoSuchAlgorithmException</span> e) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>java.security.InvalidKeyException</span> e) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>} <span
style='color:green'>// constructor</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:green'>// Buffer used to transport the bytes from one stream to another<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>byte[</span>] <span class=SpellE>buf</span> = new byte[<i><span
style='color:#0066FF'>1024</span></i>];</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// <span
class=GramE>Encrypt</span> routine<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>public</span> void encrypt(<span class=SpellE>InputStream</span> in, <span
class=SpellE>OutputStream</span> out) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>try</span> {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// Bytes written to out stream will be encrypted<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>out</span> = new <span class=SpellE>CipherOutputStream</span>(out, <span
class=SpellE>ecipher</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:green'>// Read in the <span class=SpellE>cleartext</span> bytes and write to out to encrypt<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>numRead</span> = 0;</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>while</span> ((<span class=SpellE>numRead</span> = <span
class=SpellE>in.read</span>(<span class=SpellE>buf</span>)) &gt;= 0) {</pre><pre><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:green'>// keep going until negative number returned (no data)</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>out.write</span></span><span class=GramE>(</span><span
class=SpellE>buf</span>, 0, <span class=SpellE>numRead</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style='color:green'>// Close stream <o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=SpellE><span class=GramE>out.close</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>java.io.IOException</span> e) {</pre><pre><span style='mso-tab-count:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp; </span><span style='color:green'>// handle errors<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// Decrypt routine</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>public</span> void decrypt(<span class=SpellE>InputStream</span> in, <span
class=SpellE>OutputStream</span> out) {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>try</span> {</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// Bytes read from in stream will be decrypted<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>in</span> = new <span class=SpellE>CipherInputStream</span>(in, <span
class=SpellE>dcipher</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:green'>// Read in the decrypted bytes and write the <span
class=SpellE>cleartext</span> to out<o:p></o:p></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>numRead</span> = 0;</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>while</span> ((<span class=SpellE>numRead</span> = <span
class=SpellE>in.read</span>(<span class=SpellE>buf</span>)) &gt;= 0) {</pre><pre><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// keep going until negative number returned (no data)</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>out.write</span></span><span class=GramE>(</span><span
class=SpellE>buf</span>, 0, <span class=SpellE>numRead</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style='color:green'>// Close stream</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>out.close</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} catch (<span
class=SpellE>java.io.IOException</span> e) {</pre><pre><span style='mso-tab-count:
2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='color:green'>// handle errors</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</pre>

<div style='border:none;border-bottom:solid windowtext 1.0pt;mso-border-bottom-alt:
solid windowtext .75pt;padding:0in 0in 1.0pt 0in'><pre style='border:none;
mso-border-bottom-alt:solid windowtext .75pt;padding:0in;mso-padding-alt:0in 0in 1.0pt 0in'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}</pre></div>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'>Hints:
Read about Java Cryptography classes here: <span lang=RU style='font-size:10.0pt;
font-family:"Courier New CYR";mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:
"Courier New CYR";mso-ansi-language:RU;mso-fareast-language:JA'><a
href="http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html#AppA"><span
lang=EN-US style='mso-ansi-language:EN-US;text-decoration:none;text-underline:
none'>http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html#AppA</span></a></span><span
style='font-size:10.0pt;font-family:"Courier New CYR";mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Courier New CYR";mso-fareast-language:JA'><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Also contains code examples (Do not just copy/paste the code
from this site, try to understand the principles behind Java cryptography
classes)</p>

</div>

<hr size="1" color="#0000FF">
<p class="MsoNormal"><b><font size="5">Project Notes:</font></b> </p>

<p class="MsoNormal">&nbsp; </p>

<ul>
  <li>
    <p class="MsoNormal">Make sure you use Java Development Kit (JDK) v.1.3 or
    later. If you use JDK 1.2, there is a cryptography extension pack (JCE) that
    you have to install. This is the case on Olympus server with an old version
    of JDK. See second option below, or install JCE. Read more about JCE and
    download it here:</li>
</ul>
<p class="MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p class="MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://java.sun.com/products/jce/jce122_faq.html">http://java.sun.com/products/jce/jce122_faq.html</a></p>
<ul>
  <li>
    <p class="MsoNormal">It is strongly suggested that you download updated JDK
    from <a href="http://java.sun.com">java.sun.com</a>, current version 1.4
    (select J2SE 1.4 SDK). Upon installation, make sure you set the <i>classpath</i>
    variable to reflect the installation path. Also, include current directory
    in your class path - <font face="Courier New" size="2">...\tools.jar; .; etc</font>.
    Also, set the system <i>path</i> variable to include the path of <i>C:\your-jdk-install-dir\bin</i>.
  </li>
</ul>
<p class="MsoNormal">&nbsp;</p>
<ul>
  <li>
    <p class="MsoNormal">You will need to lookup the use of the following Java
    classes: <i>PBEKeySpec</i>, <i>SecretKeyFactory</i>, <i>FileInputStream</i>,
    <i>FileOutputStream</i>. </li>
</ul>
<p class="MsoNormal">&nbsp;</p>
<ul>
  <li>
    <p class="MsoNormal">If you have questions, e-mail to <a href="mailto:oleg@cs.ucf.edu">oleg@cs.ucf.edu</a></li>
</ul>
<p class="MsoNormal">&nbsp;</p>
<hr size="1" color="#0000FF">
<p class="MsoNormal"><font face="Verdana" size="2"><a href="http://www.cs.ucf.edu/courses/cot4932/">COT4932
Home</a> | <a href="http://www.ucf.edu">UCF</a> | <a href="http://google.com">Google</a>
| <a href="http://java.sun.com">SUN's Java Site</a></font></p>

</body>

</html>
