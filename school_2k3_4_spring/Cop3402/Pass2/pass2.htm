<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="pass2_files/filelist.xml">
<title>Project 3 Description</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>COP 3402 System Software</o:Subject>
  <o:Author>Hal Stringer</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Jan Kinzler</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>18</o:TotalTime>
  <o:LastPrinted>2002-06-28T16:11:00Z</o:LastPrinted>
  <o:Created>2003-04-14T13:50:00Z</o:Created>
  <o:LastSaved>2003-04-14T13:50:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1084</o:Words>
  <o:Characters>6181</o:Characters>
  <o:Company>UCF, Summer 2002</o:Company>
  <o:Lines>51</o:Lines>
  <o:Paragraphs>14</o:Paragraphs>
  <o:CharactersWithSpaces>7251</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Bullet, li.Bullet, div.Bullet
	{mso-style-name:Bullet;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	text-indent:-.25in;
	mso-pagination:widow-orphan;
	mso-list:l4 level1 lfo2;
	tab-stops:list .25in;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:.75in 1.0in .5in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:-2;
	mso-list-type:simple;
	mso-list-template-ids:-1;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-text:*;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0in;
	text-indent:0in;}
@list l1
	{mso-list-id:126634279;
	mso-list-type:simple;
	mso-list-template-ids:67698703;}
@list l1:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l2
	{mso-list-id:194933021;
	mso-list-type:hybrid;
	mso-list-template-ids:1592677930;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l3
	{mso-list-id:309864804;
	mso-list-type:simple;
	mso-list-template-ids:67698703;}
@list l3:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l4
	{mso-list-id:1491169561;
	mso-list-type:simple;
	mso-list-template-ids:1627528574;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-style-link:Bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l5
	{mso-list-id:1944529584;
	mso-list-type:simple;
	mso-list-template-ids:67698703;}
@list l5:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l0:level1 lfo3
	{mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:–;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0in;
	mso-level-legacy-space:0in;
	margin-left:0in;
	text-indent:0in;
	mso-ansi-font-size:20.0pt;
	font-family:"Times New Roman";}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>COP 3402 Pass
Two<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>Due Date – March
26, NO EXTENSIONS</span></b><u><span style='font-size:14.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></u></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>This project requires you to write Pass 2 of an assembler
for the SIC/XE machine studied in class.<span style='mso-spacerun:yes'> 
</span>However, this machine is a restricted form of the SIC/XE.<span
style='mso-spacerun:yes'>  </span>It only allows SIC instructions that use memory
addressing and XE instructions for register-only operations.<span
style='mso-spacerun:yes'>  </span>The machine does not currently support
immediate or relative addressing or floating point numbers.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Your program will be tested using three input files: 1) an
intermediate file (p2INTFILE), 2) a file named “<i style='mso-bidi-font-style:
normal'>opcodes2.txt</i>” containing mnemonic and hexadecimal operation codes
and instruction formats for the restricted set of<span
style='mso-spacerun:yes'>  </span>SIC/XE instructions and 3) a file called “<i
style='mso-bidi-font-style:normal'>p2symboltable.txt</i>” containing the
contents of a symbol table generated by Pass 1.<span style='mso-spacerun:yes'> 
</span>Copies of all three files are posted on the web site.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Your program should read the opcode and symbol table files
into the appropriate data structures then assemble the program provided in the
intermediate file.<span style='mso-spacerun:yes'>  </span>The output of this
Pass 2 project should be an absolute object file which can be loaded into the
SIC/XE simulator and successfully run. You must write your program in C.<span
style='mso-spacerun:yes'>  </span><span style='mso-bidi-font-size:12.0pt;
color:red'>We will not load into the SIC/XE simulator. We will grade based on
your output files.<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u>Input - Operation
Code File</u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Your program will need to construct <span class=GramE>a</span>
operation code table from the input file “<i style='mso-bidi-font-style:normal'>opcodes2.txt</i>”.<span
style='mso-spacerun:yes'>  </span>This file’s format and content are similar to
that provided in Pass 1.<span style='mso-spacerun:yes'>  </span>You may reuse
your code from that project to initialize and search this table.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The contents of <i style='mso-bidi-font-style:normal'>opcodes2.txt</i>
will be pre-sorted in alphabetical order by mnemonic opcode. An example is
shown below.<span style='mso-spacerun:yes'>  </span>The three columns in the
file are the mnemonic opcode, the instruction format and the hexadecimal
opcode.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>12345678901234567890
-- <span class=GramE>this</span> line won't be in the file</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>ADD<span
style='mso-spacerun:yes'>    </span><span class=GramE>3<span
style='mso-spacerun:yes'>  </span>18</span></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>ADDR<span
style='mso-spacerun:yes'>   </span><span class=GramE>2<span
style='mso-spacerun:yes'>  </span>90</span></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>AND<span
style='mso-spacerun:yes'>    </span><span class=GramE>3<span
style='mso-spacerun:yes'>  </span>40</span></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span><span
class=GramE>CLEAR<span style='mso-spacerun:yes'>  </span>2</span><span
style='mso-spacerun:yes'>  </span>B4</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>COMP<span
style='mso-spacerun:yes'>   </span><span class=GramE>3<span
style='mso-spacerun:yes'>  </span>28</span></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span><span
class=GramE>COMPR<span style='mso-spacerun:yes'>  </span>2</span><span
style='mso-spacerun:yes'>  </span>A0</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u>Input – Symbol
Table File<o:p></o:p></u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Your program will need to construct a SYMTAB table from the
input file “<i style='mso-bidi-font-style:normal'>p2sybmoltable.txt</i>”.<span
style='mso-spacerun:yes'>  </span>The format of this file is provided below.<span
style='mso-spacerun:yes'>  </span>You should be able to reuse much of your code
from Project 2 as it relates to this table (e.g., declarations, searching the
table). </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The contents of <i style='mso-bidi-font-style:normal'>p2sybmoltable.txt</i>
are sorted in the order in which labels were encountered during pass 1.<span
style='mso-spacerun:yes'>  </span>Your program should read in the file
line-by-line and sort the table as needed to match your search function.<span
style='mso-spacerun:yes'>  </span>The four columns in this table are, in order,
the symbol’s <i style='mso-bidi-font-style:normal'>name</i>, its <i
style='mso-bidi-font-style:normal'>value</i>, its <i style='mso-bidi-font-style:
normal'>length</i> and its <i style='mso-bidi-font-style:normal'>type</i>.<span
style='mso-spacerun:yes'>  </span>An example of the table is given below:</p>

<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA'><br clear=all style='mso-special-character:line-break;
page-break-before:always'>
</span>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span><span
style='mso-spacerun:yes'>        </span><span
style='mso-spacerun:yes'> </span>1<span style='mso-spacerun:yes'>        
</span>2<span style='mso-spacerun:yes'>         </span>3</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>12345678901234567890123456789012345
-- <span class=GramE>these</span> lines won't be in the file</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>NUMBER<span
style='mso-spacerun:yes'>    </span>5<span style='mso-spacerun:yes'>        
</span>0<span style='mso-spacerun:yes'>         </span>A</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>LOOP<span
style='mso-spacerun:yes'>      </span>4107<span style='mso-spacerun:yes'>     
</span>0<span style='mso-spacerun:yes'>         </span>A</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>STOP<span
style='mso-spacerun:yes'>      </span>4150<span style='mso-spacerun:yes'>     
</span>0<span style='mso-spacerun:yes'>         </span>A</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>EXTRA1<span
style='mso-spacerun:yes'>    </span>4153<span style='mso-spacerun:yes'>     
</span>3<span style='mso-spacerun:yes'>         </span>A</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>OUTDEV<span
style='mso-spacerun:yes'>    </span>4156<span style='mso-spacerun:yes'>     
</span>1<span style='mso-spacerun:yes'>     </span><span
style='mso-spacerun:yes'>    </span>A</p>

<p class=MsoPlainText><span style='mso-tab-count:1'>      </span>OUTBUF<span
style='mso-spacerun:yes'>    </span>4157<span style='mso-spacerun:yes'>     
</span>80<span style='mso-spacerun:yes'>        </span>A</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>Values are given in decimal notation.<span
style='mso-spacerun:yes'>  </span>Assume that no errors (e.g., duplicate
symbols) will exist in the table.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u>Input –
Intermediate File (INTFILE)<o:p></o:p></u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>You will be provided <span class=GramE>a</span> intermediate
file similar in format to that described as output for the Pass 1 project.<span
style='mso-spacerun:yes'>  </span>The file used to grade your program will be
labeled INTFILE and is posted on the class web site. Your program must read in
each line of intermediate code, divide it into tokens (fields) and then use
this data to process the line during Pass 2.<span style='mso-spacerun:yes'> 
</span>The format of the file is as follows:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><u>Column</u><span
style='mso-tab-count:1'>            </span><u>Field/Token<o:p></o:p></u></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>1-4<span style='mso-tab-count:2'>                   </span>hex
location address for line<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>5-10<span style='mso-tab-count:2'>                 </span>blank<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>11-18<span style='mso-tab-count:2'>               </span><span
class=GramE>label</span><o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>19 <span style='mso-tab-count:2'>                   </span>blank<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>20-25<span style='mso-tab-count:2'>               </span>mnemonic
opcode or directive<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>26-27<span style='mso-tab-count:2'>               </span>blank<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>28-45<span style='mso-tab-count:2'>               </span>operands<o:p></o:p></span></p>

<p class=MsoNormal><span style='layout-grid-mode:line'><span style='mso-tab-count:
1'>            </span>46-76<span style='mso-tab-count:2'>               </span>comments<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>See the INTFILE posted on the web site for more
information.<span style='mso-spacerun:yes'>  </span>Assume that the no errors
exist in the INTFILE.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For this project, the intermediate file can contain any of
the instructions found in the <span class=GramE>file<span
style='mso-spacerun:yes'>  </span>“</span><i style='mso-bidi-font-style:normal'>opcodes2.txt</i>”.<span
style='mso-spacerun:yes'>  </span>You must also recognize the following
assembler directives:<span style='mso-spacerun:yes'>  </span>START, END, BYTE,
WORD, RESB, RESW and EQU.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Since the START statement contains a number other than 0 as
the starting address, your pass 2 should generate absolute code for loading at
the starting location.</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u><o:p><span
 style='text-decoration:none'>&nbsp;</span></o:p></u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u>Output – Listing
File (LSTFILE)<o:p></o:p></u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>You program must produce a listing file that contains the
information from the intermediate file along with the assembled instructions.
This file must include a copy of all program lines and comments.<span
style='mso-spacerun:yes'>  </span>A sample portion of the listing file is given
below:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA'><br clear=all style='mso-special-character:line-break;
page-break-before:always'>
</span>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>1<span
style='mso-spacerun:yes'>         </span>2<span
style='mso-spacerun:yes'>         </span>3<span
style='mso-spacerun:yes'>         </span>4<span
style='mso-spacerun:yes'>         </span>5<span
style='mso-spacerun:yes'>         </span>6<span
style='mso-spacerun:yes'>         </span>7<o:p></o:p></span></p>

<p class=MsoPlainText><u>1234567890123456789012345678901234567890123456789012345678901234567890123456<o:p></o:p></u></p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText>112C B410<span style='mso-spacerun:yes'>  
</span>WRMSG<span style='mso-spacerun:yes'>    </span>CLEAR<span
style='mso-spacerun:yes'>   </span>X<span
style='mso-spacerun:yes'>                     </span></p>

<p class=MsoPlainText>112E E0103C MLOOP<span style='mso-spacerun:yes'>   
</span>TD<span style='mso-spacerun:yes'>      </span>OUTDEV<span
style='mso-spacerun:yes'>           </span><span
style='mso-spacerun:yes'> </span>TEST OUTPUT DEVICE<span
style='mso-spacerun:yes'>             </span></p>

<p class=MsoPlainText>1131 30112E<span style='mso-spacerun:yes'>         
</span>JEQ<span style='mso-spacerun:yes'>     </span>MLOOP<span
style='mso-spacerun:yes'>             </span>LOOP UNTIL READY<span
style='mso-spacerun:yes'>               </span></p>

<p class=MsoPlainText>1134 509143<span style='mso-spacerun:yes'>         
</span>LDCH<span style='mso-spacerun:yes'>    </span>MSGTXT<span class=GramE>,X</span><span
style='mso-spacerun:yes'>          </span>GET CHARACTER FROM BUFFER<span
style='mso-spacerun:yes'>      </span></p>

<p class=MsoPlainText>1137 DC103C<span style='mso-spacerun:yes'>         
</span>WD<span style='mso-spacerun:yes'>      </span>OUTDEV<span
style='mso-spacerun:yes'>            </span>WRITE CHARACTER<span
style='mso-spacerun:yes'>   </span><span
style='mso-spacerun:yes'>             </span></p>

<p class=MsoPlainText>113A 2C1153<span style='mso-spacerun:yes'>         
</span>TIX<span style='mso-spacerun:yes'>     </span>MSGLEN<span
style='mso-spacerun:yes'>            </span>LOOP UNTIL ALL CHARACTERS<span
style='mso-spacerun:yes'>      </span></p>

<p class=MsoPlainText>113D 38112E<span style='mso-spacerun:yes'>         
</span>JLT<span style='mso-spacerun:yes'>     </span>MLOOP<span
style='mso-spacerun:yes'>               </span>HAVE BEEN WRITTEN<span
style='mso-spacerun:yes'>            </span></p>

<p class=MsoPlainText>1140 4C0000<span style='mso-spacerun:yes'>         
</span>RSUB<span style='mso-spacerun:yes'>                      </span>RETURN
TO CALLER<span style='mso-spacerun:yes'>               </span></p>

<p class=MsoPlainText>1143 205351 MSGTXT<span style='mso-spacerun:yes'>  
</span>BYTE<span style='mso-spacerun:yes'>    </span>C' SQUARED'<span
style='mso-spacerun:yes'>                                      </span></p>

<p class=MsoPlainText><span style='mso-spacerun:yes'>     </span>554152</p>

<p class=MsoPlainText><span style='mso-spacerun:yes'>     </span>4544</p>

<p class=MsoPlainText>114B 204551<span style='mso-spacerun:yes'>         
</span>BYTE<span style='mso-spacerun:yes'>    </span>C' <span class=GramE>EQUALS
'</span><span style='mso-spacerun:yes'>                                     
</span></p>

<p class=MsoPlainText><span style='mso-spacerun:yes'>     </span>55414C</p>

<p class=MsoPlainText><span style='mso-spacerun:yes'>     </span>5320</p>

<p class=MsoPlainText>1153 000010 MSGLEN<span style='mso-spacerun:yes'>  
</span>WORD<span style='mso-spacerun:yes'>    </span>16<span
style='mso-spacerun:yes'>                            </span><span
style='mso-spacerun:yes'>                   </span></p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Basically, you must generate hexadecimal machine code for
each line from the intermediate file and insert it between the location column
and the label column.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:12.0pt;color:red'>WE WILL LOAD OBJECT FILE INTO
SIC/XE SIMULATOR<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u><span
style='color:red'>Output – Object File (OBJFILE)<o:p></o:p></span></u></b></p>

<p class=MsoNormal><span style='color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='color:red'>Finally, you must generate an object
file for the assembled program that can be loaded into the SIC/XE simulator and
executed.<span style='mso-spacerun:yes'>  </span>The format of the object file
(and record descriptions) is provided on pages 48 and 49 of your text.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='color:red'>To test your OBJFILE, rename it to
DEVF2 and run the SIC/XE simulator used in Project 1.<span
style='mso-spacerun:yes'>  </span>The program computes the squared values for
the numbers 1 through 10 and should produce the following output on DEV04:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:red'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0001
SQUARED EQUALS 0001<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0002
SQUARED EQUALS 0004<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0003
SQUARED EQUALS 0009<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0004
SQUARED EQUALS 0016<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0005
SQUARED EQUALS 0025<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0006
SQUARED EQUALS 0036<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0007
SQUARED EQUALS 0049<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0008
SQUARED EQUALS 0064<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0009
SQUARED EQUALS 0081<o:p></o:p></span></p>

<p class=MsoPlainText><span style='color:red'><span style='mso-tab-count:1'>      </span>0010
SQUARED EQUALS 0100<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA'><br clear=all style='mso-special-character:line-break;
page-break-before:always'>
</span>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><u>What <span
class=GramE>To</span> Turn In<o:p></o:p></u></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>You may write your program on any system you choose.<span
style='mso-spacerun:yes'>  </span>However, the ultimate arbiter of correctness
in execution will be the <st1:place>Olympus</st1:place> system.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>At the end of this project you should email a zip file
containing:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>your
source code, </p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>executable
code, </p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>other
relevant files (if any),</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
class=GramE>copy</span> of object code generated from the posted INTFILE.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Write the language (C) on the disk to make it easier for us
to compile and run your program.<span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Finally, please be sure to make your program easy to read
(e.g., no cryptic programming) and comment your program properly. <span
style='mso-spacerun:yes'> </span>Three types of comments are recommended: 1)
comments explaining what each routine does, 2) comments explaining different
segments of each routine and 3) comments describing each variable</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Also be sure to indent your program properly, use meaningful
names and constants (#<span class=GramE>define</span>).<span
style='mso-spacerun:yes'>  </span>Do not hard code numbers in your program
unless absolutely necessary. </p>

</div>

</body>

</html>
